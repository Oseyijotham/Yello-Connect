{"version":3,"file":"static/js/163.e2178af1.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Contacts/Contacts.module.css?5e71","components/Contacts/icons.svg","components/Contacts/Contacts.jsx","redux/AppRedux/selectors.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"phoneBook\":\"ContactForm_phoneBook__Krcs9\",\"phoneBookContainer\":\"ContactForm_phoneBookContainer__zvme-\",\"formTitle\":\"ContactForm_formTitle__N6O4g\",\"formSection\":\"ContactForm_formSection__4wcn3\",\"button\":\"ContactForm_button__eSwX9\",\"buttonArea\":\"ContactForm_buttonArea__IAEoE\",\"formLabel\":\"ContactForm_formLabel__TSwxK\",\"formInput\":\"ContactForm_formInput__GszVU\"};","import { addContact } from '../../redux/AppRedux/operations';\nimport { selectContacts} from '../../redux/AppRedux/selectors';\nimport css from './ContactForm.module.css';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\n\nexport const ContactForm = ({ children }) => {\n  const contactNameId = nanoid();\n  const contactNumberId = nanoid();\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n\n  const handleButtonPress = evt => {\n    evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n    setTimeout(() => {\n      evt.target.style.boxShadow = 'none';\n    }, 1000);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const currentName = event.target[0].value;\n\n    const isNameDuplicate = contacts.some(\n      contact =>\n        contact.name.trim().toLowerCase() === currentName.trim().toLowerCase()\n    );\n    if (isNameDuplicate) {\n      alert('This name already exists');\n\n      return;\n    }\n\n    if (currentName.trim() === \"\") {\n      alert('Empty spaces are not allowed');\n\n      return;\n    }\n\n    dispatch(\n      addContact({ name: event.target[0].value, phone: event.target[1].value })\n    );\n   \n    //console.log({ name: event.target[0].value, phone: event.target[1].value });\n     event.target.reset();\n  };\n\n  const handleChange = (evt) => {\n    const wrd = evt.target.value\n    let hasExceeded = false;\n    let nameRay;\n    if (wrd.length > 15) {\n      nameRay = [...wrd];\n      nameRay.pop()\n      evt.target.value = nameRay.join(\"\");\n      hasExceeded = true;\n    }\n    if ((hasExceeded === true)) {\n      alert('Maximum Charater limit is 15');\n    }\n  }\n\n  return (\n    <div className={css.phoneBook}>\n      <h2 className={css.formTitle}>Phonebook</h2>\n      <form onSubmit={handleSubmit} className={css.formSection}>\n        <label className={css.loginLabel}>\n          <span className={css.formLabel}>Name:</span>\n          <input\n            type=\"text\"\n            placeholder=\"Enter Name\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan.\"\n            required\n            autoComplete=\"off\"\n            id={contactNameId}\n            className={css.formInput}\n          \n            onChange={handleChange}\n          />\n        </label>\n        <label>\n          <span className={css.formLabel}>Number:</span>\n          <input\n            type=\"tel\"\n            placeholder=\"Enter Number\"\n            autoComplete=\"off\"\n            name=\"number\"\n            required\n            id={contactNumberId}\n            className={css.formInput}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          />\n        </label>\n        <div className={css.buttonArea}>\n          <button\n            type=\"submit\"\n            name=\"button\"\n            className={css.button}\n            onClick={handleButtonPress}\n          >\n            Add Contact\n          </button>\n        </div>\n      </form>\n      {children}\n    </div>\n  );\n};\n\nContactForm.propTypes = {\n  children: PropTypes.node,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsSection\":\"ContactList_contactsSection__3KZcT\",\"contactsTitle\":\"ContactList_contactsTitle__gHlpa\",\"contactsList\":\"ContactList_contactsList__7leRd\",\"contactsData\":\"ContactList_contactsData__gZODb\",\"contactsPhone\":\"ContactList_contactsPhone__qIcDs\",\"contactsItemWrapper\":\"ContactList_contactsItemWrapper__-AWsL\",\"contactsItem\":\"ContactList_contactsItem__x8C9b\",\"contactsDetails\":\"ContactList_contactsDetails__71j6L\",\"contactsName\":\"ContactList_contactsName__6rTA7\",\"contactsButtonArea\":\"ContactList_contactsButtonArea__6jkW1\",\"contactsButton\":\"ContactList_contactsButton__6hBLW\",\"navigationArea\":\"ContactList_navigationArea__nXhaT\",\"navigationButton\":\"ContactList_navigationButton__ZT5QF\"};","import { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { selectContacts } from '../../redux/AppRedux/selectors';\nimport {\n  selectContactsFilter,\n  selectFilterUp,\n  selectFilterDown,\n} from '../../redux/AppRedux/selectors';\nimport {\n  deleteContact,\n  openModal,\n  fetchContactById,\n  handleFilterFowardUp,\n  handleFilterFowardDown,\n  handleFilterBackwardUp,\n  handleFilterBackwardDown,\n} from '../../redux/AppRedux/operations';\nimport css from './ContactList.module.css';\nimport PropTypes from 'prop-types';\nimport Notiflix from 'notiflix';\n\nexport const ContactList = ({ children }) => {\n  const contacts = useSelector(selectContacts);\n  const filterUp = useSelector(selectFilterUp);\n  const filterDown = useSelector(selectFilterDown);\n  //let myContacts  \n  const dispatch = useDispatch();\n  const handleDelete = evt => {\n    evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n    setTimeout(() => {\n      evt.target.style.boxShadow = 'none';\n    }, 1000);\n    //console.log(evt.target.name);\n    dispatch(deleteContact(evt.target.name));\n    /*//dispatch(closeModal());\n    const exist = contacts.find(contact => contact._id === evt.target.name);\n    console.log(contacts);\n    if (exist === undefined) {\n      console.log('gvghi');\n      dispatch(closeModal());\n    }*/\n    \n  };\n  const filterValue = useSelector(selectContactsFilter);\n\n  const handleModalOpen = (evt) => {\n    if (evt.target.getAttribute('data-id')) {\n      //console.log('Modal opened!');\n\n      const id = evt.currentTarget.getAttribute('data-id');\n      //console.log(id);\n      dispatch(fetchContactById(id));\n      dispatch(openModal());\n    }\n  };\n  const [lowerLimit, setLowerLimit] = useState(0);\n  const [upperLimit, setUpperLimit] = useState(4);\n\n  const handleFilterFoward = () => {\n    \n  }\n\n  const handleForward = (evt) => {\n    evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n    setTimeout(() => {\n      evt.target.style.boxShadow = 'none';\n    }, 500);\n    //let fwdWar = lowerLimit + 4;\n    if (filterValue === \"\") {\n      setLowerLimit(lowerLimit + 4);\n      setUpperLimit(upperLimit + 4);\n    }\n    if (filterValue !== \"\") {\n      console.log(\"OK\")\n      const str = filterUp;\n      const sto = filterDown\n      dispatch(handleFilterFowardUp(str));\n      dispatch(handleFilterFowardDown(sto));\n    }\n  }\n\n  const handleBackward = (evt) => {\n     evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n     setTimeout(() => {\n       evt.target.style.boxShadow = 'none';\n     }, 500);\n    //let fwdWar = lowerLimit + 4;\n    if (filterValue === \"\") {\n      setLowerLimit(lowerLimit - 4);\n      setUpperLimit(upperLimit - 4);\n    }\n    if (filterValue !== '') {\n      const str1 = filterUp;\n      const sto1 = filterDown;\n       dispatch(handleFilterBackwardUp(str1));\n       dispatch(handleFilterBackwardDown(sto1));\n     }\n   };\n  \n   const bestMatches = contacts.filter(\n     contact =>\n       contact.name.toLowerCase().includes(filterValue.trim().toLowerCase()) &&\n       filterValue.trim() !== ''\n   );\n\n  return (\n    <div className={css.contactsSection}>\n      <h3 className={css.contactsTitle}>Contacts</h3>\n      {children}\n      {filterValue === '' && contacts.length !== 0 && (\n        <ul className={css.contactsList}>\n          {contacts.map(contact => {\n            const myindex = contacts.indexOf(contact);\n            if (myindex >= lowerLimit && myindex < upperLimit) {\n              return (\n                <li\n                  key={contact._id}\n                  data-id={contact._id}\n                  className={css.contactsItem}\n                  onClick={handleModalOpen}\n                >\n                  <span className={css.contactsData} data-id={contact._id}>\n                    {contact.name}:{' '}\n                    <span className={css.contactsPhone} data-id={contact._id}>\n                      {contact.phone}\n                    </span>\n                  </span>\n                  <span className={css.contactsButtonArea}>\n                    <button\n                      className={css.contactsButton}\n                      name={contact._id}\n                      onClick={(evt) => {\n                        navigator.clipboard.writeText(contact.phone);\n                        Notiflix.Notify.success(\n                          \"Copied\"\n                        );\n                        evt.target.style.boxShadow =\n                          'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n                        setTimeout(() => {\n                          evt.target.style.boxShadow = 'none';\n                        }, 1000);\n                      }\n                      }\n                    >\n                      Copy\n                    </button>\n                    <button\n                      type=\"submit\"\n                      className={css.contactsButton}\n                      name={contact._id}\n                      onClick={handleDelete}\n                    >\n                      Delete\n                    </button>\n                  </span>\n                </li>\n              );\n            }\n          })}\n        </ul>\n      )}\n      {filterValue === '' && (\n        <div className={css.navigationArea}>\n          {lowerLimit !== 0 && (\n            <button className={css.navigationButton} onClick={handleBackward}>\n              Prev\n            </button>\n          )}\n          {!(upperLimit > contacts.length) &&\n            upperLimit !== contacts.length && (\n              <button className={css.navigationButton} onClick={handleForward}>\n                Forward\n              </button>\n            )}\n        </div>\n      )}\n      {filterValue !== '' && (\n        <div className={css.navigationArea}>\n          {filterDown !== 0 && (\n            <button className={css.navigationButton} onClick={handleBackward}>\n              Prev\n            </button>\n          )}\n          {!(filterUp > bestMatches.length) &&\n            filterUp !== bestMatches.length && (\n              <button className={css.navigationButton} onClick={handleForward}>\n                Forward\n              </button>\n            )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nContactList.propTypes = {\n  children: PropTypes.node,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"formLabel\":\"Filter_formLabel__Ozoh5\",\"formInput\":\"Filter_formInput__XNLZn\",\"contactsList\":\"Filter_contactsList__78f6h\",\"contactsData\":\"Filter_contactsData__q4ogS\",\"contactsItem\":\"Filter_contactsItem__CHFiw\",\"contactsPhone\":\"Filter_contactsPhone__hxyN-\",\"contactsButtonArea\":\"Filter_contactsButtonArea__0a5PO\",\"contactsButton\":\"Filter_contactsButton__7e+W-\"};","import { useSelector } from 'react-redux';\nimport { selectContacts } from '../../redux/AppRedux/selectors';\nimport {\n  selectContactsFilter,\n  selectFilterUp,\n  selectFilterDown\n} from '../../redux/AppRedux/selectors';\nimport { useDispatch } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport css from './Filter.module.css';\nimport { setFilter } from '../../redux/AppRedux/filterSlice';\nimport {\n  deleteContact,\n  openModal,\n  fetchContactById\n} from '../../redux/AppRedux/operations';\n\nexport const Filter = () => {\n  const searchTermId = nanoid();\n  const contacts = useSelector(selectContacts);\n  const filterUpper = useSelector(selectFilterUp);\n  const filterLower = useSelector(selectFilterDown);\n  const filterValue = useSelector(selectContactsFilter);\n  const dispatch = useDispatch();\n  const handleSearch = event => {\n    dispatch(setFilter(event.target.value));\n    console.log(event.target.value);\n  };\n  const bestMatches = contacts.filter(\n    contact =>\n      contact.name.toLowerCase().includes(filterValue.trim().toLowerCase()) &&\n      filterValue.trim() !== ''\n  );\n\n  const handleModalOpen = evt => {\n    if (evt.target.getAttribute('data-id')) {\n      //console.log('Modal opened!');\n\n      const id = evt.currentTarget.getAttribute('data-id');\n      //console.log(id);\n      dispatch(fetchContactById(id));\n      dispatch(openModal());\n    }\n  };\n\n  const handleDelete = evt => {\n    evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n    setTimeout(() => {\n      evt.target.style.boxShadow = 'none';\n    }, 1000);\n    //console.log(evt.target.name);\n    dispatch(deleteContact(evt.target.name));\n    /*//dispatch(closeModal());\n    const exist = contacts.find(contact => contact._id === evt.target.name);\n    console.log(contacts);\n    if (exist === undefined) {\n      console.log('gvghi');\n      dispatch(closeModal());\n    }*/\n  };\n\n  return (\n    <div className={css.contactList}>\n      <label htmlFor={searchTermId}>\n        <span className={css.formLabel}>Find Contacts By Name:</span>\n        <input\n          type=\"text\"\n          placeholder=\"Enter Name\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan.\"\n          required\n          onChange={handleSearch}\n          id={searchTermId}\n          autoComplete=\"off\"\n          className={css.formInput}\n        />\n      </label>\n\n      {filterValue !== '' && bestMatches.length !== 0 && (\n        <ul className={css.contactsList}>\n          {bestMatches.map(contact => {\n             const myindex = bestMatches.indexOf(contact);\n            if (myindex >= filterLower && myindex < filterUpper) {\n              return (\n                <li\n                  key={contact._id}\n                  data-id={contact._id}\n                  className={css.contactsItem}\n                  onClick={handleModalOpen}\n                >\n                  <span className={css.contactsData} data-id={contact._id}>\n                    {contact.name}:{' '}\n                    <span className={css.contactsPhone} data-id={contact._id}>\n                      {contact.phone}\n                    </span>\n                  </span>\n                  <span className={css.contactsButtonArea}>\n                    <button\n                      className={css.contactsButton}\n                      name={contact._id}\n                      onClick={() => navigator.clipboard.writeText(contact.phone)}\n                    >\n                      Copy\n                    </button>\n                    <button\n                      type=\"submit\"\n                      className={css.contactsButton}\n                      name={contact._id}\n                      onClick={handleDelete}\n                    >\n                      Delete\n                    </button>\n                  </span>\n                </li>\n              )\n            }\n          })}\n        </ul>\n      )}\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"coverWrapper\":\"Contacts_coverWrapper__X4gza\",\"selected\":\"Contacts_selected__JPpLk\",\"contactsDetailsHide\":\"Contacts_contactsDetailsHide__EAxL5\",\"contactsDetailsShow\":\"Contacts_contactsDetailsShow__GNtTf\",\"closeModal\":\"Contacts_closeModal__mVT9L\",\"contactsDetailsArea\":\"Contacts_contactsDetailsArea__qByv6\",\"contactImage\":\"Contacts_contactImage__9S+4-\",\"detailsSection\":\"Contacts_detailsSection__-isHv\",\"detailsImageWrapper\":\"Contacts_detailsImageWrapper__4e94u\",\"detailsImage\":\"Contacts_detailsImage__Fv6gk\",\"detailsImageButton\":\"Contacts_detailsImageButton__R1iMX\",\"detailsImageInput\":\"Contacts_detailsImageInput__pywld\",\"detailsSectionTitle\":\"Contacts_detailsSectionTitle__zASfN\",\"detailsWrapper\":\"Contacts_detailsWrapper__C50Aa\",\"detailsItem\":\"Contacts_detailsItem__DEXoV\",\"detailsCover\":\"Contacts_detailsCover__lqSnp\",\"detailsInfo\":\"Contacts_detailsInfo__HEN35\",\"details\":\"Contacts_details__xkbEz\",\"detailsVal\":\"Contacts_detailsVal__AIPnW\",\"detailsValPhone\":\"Contacts_detailsValPhone__28REO\",\"detailsValInput\":\"Contacts_detailsValInput__XHX6i\",\"detailsValInputPhone\":\"Contacts_detailsValInputPhone__Z59HF\",\"backDrop\":\"Contacts_backDrop__of3D3\",\"loader\":\"Contacts_loader__jgaE8\",\"detailButton\":\"Contacts_detailButton__+1M8g\",\"buttonWrapper\":\"Contacts_buttonWrapper__u4A+7\",\"detailsEditClose\":\"Contacts_detailsEditClose__3PDcl\"};","var _defs;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgIcons(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-arrow\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.586 27.414l-10-10c-0.781-0.781-0.781-2.047 0-2.828l10-10c0.781-0.781 2.047-0.781 2.828 0s0.781 2.047 0 2.828l-6.586 6.586h19.172c1.105 0 2 0.895 2 2s-0.895 2-2 2h-19.172l6.586 6.586c0.39 0.39 0.586 0.902 0.586 1.414s-0.195 1.024-0.586 1.414c-0.781 0.781-2.047 0.781-2.828 0z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-cross\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M31.708 25.708c0 0 0 0 0 0l-9.708-9.708 9.708-9.708c0 0 0 0 0 0 0.105-0.105 0.18-0.227 0.229-0.357 0.133-0.356 0.057-0.771-0.229-1.057l-4.586-4.586c-0.286-0.286-0.702-0.361-1.057-0.229-0.13 0.048-0.252 0.124-0.357 0.228 0 0 0 0 0 0l-9.708 9.708-9.708-9.708c0 0 0 0 0 0-0.105-0.104-0.227-0.18-0.357-0.228-0.356-0.133-0.771-0.057-1.057 0.229l-4.586 4.586c-0.286 0.286-0.361 0.702-0.229 1.057 0.049 0.13 0.124 0.252 0.229 0.357 0 0 0 0 0 0l9.708 9.708-9.708 9.708c0 0 0 0 0 0-0.104 0.105-0.18 0.227-0.229 0.357-0.133 0.355-0.057 0.771 0.229 1.057l4.586 4.586c0.286 0.286 0.702 0.361 1.057 0.229 0.13-0.049 0.252-0.124 0.357-0.229 0 0 0 0 0 0l9.708-9.708 9.708 9.708c0 0 0 0 0 0 0.105 0.105 0.227 0.18 0.357 0.229 0.356 0.133 0.771 0.057 1.057-0.229l4.586-4.586c0.286-0.286 0.362-0.702 0.229-1.057-0.049-0.13-0.124-0.252-0.229-0.357z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-enlarge\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32 0h-13l5 5-6 6 3 3 6-6 5 5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32 32v-13l-5 5-6-6-3 3 6 6-5 5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 32h13l-5-5 6-6-3-3-6 6-5-5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0v13l5-5 6 6 3-3-6-6 5-5z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-enlarge2\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32 0v13l-5-5-6 6-3-3 6-6-5-5zM14 21l-6 6 5 5h-13v-13l5 5 6-6z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-pause\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM16 29c-7.18 0-13-5.82-13-13s5.82-13 13-13 13 5.82 13 13-5.82 13-13 13zM10 10h4v12h-4zM18 10h4v12h-4z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-play2\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM16 29c-7.18 0-13-5.82-13-13s5.82-13 13-13 13 5.82 13 13-5.82 13-13 13zM12 9l12 7-12 7z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-play3\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6 4l20 12-20 12z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-tv\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M30.662 9.003c-2.775-0.399-5.731-0.688-8.815-0.851l5.153-5.153-2-2-7.017 7.017c-0.656-0.011-1.317-0.017-1.983-0.017v0l-8-8-2 2 6.069 6.069c-3.779 0.133-7.386 0.454-10.731 0.935-0.86 3.366-1.338 7.086-1.338 10.997s0.477 7.63 1.338 10.997c4.489 0.645 9.448 1.003 14.662 1.003s10.173-0.358 14.662-1.003c0.86-3.366 1.338-7.086 1.338-10.997s-0.477-7.63-1.338-10.997zM26.997 27.331c-3.367 0.43-7.086 0.669-10.997 0.669s-7.63-0.239-10.997-0.669c-0.645-2.244-1.003-4.724-1.003-7.331s0.358-5.087 1.003-7.331c3.366-0.43 7.086-0.669 10.997-0.669s7.63 0.239 10.996 0.669c0.645 2.244 1.004 4.724 1.004 7.331s-0.358 5.087-1.003 7.331z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-volume-decrease\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16 14h16v4h-16v-4z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13 30c-0.26 0-0.516-0.102-0.707-0.293l-7.707-7.707h-3.586c-0.552 0-1-0.448-1-1v-10c0-0.552 0.448-1 1-1h3.586l7.707-7.707c0.286-0.286 0.716-0.372 1.090-0.217s0.617 0.519 0.617 0.924v26c0 0.404-0.244 0.769-0.617 0.924-0.124 0.051-0.254 0.076-0.383 0.076z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-volume-increase\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32 18h-6v6h-4v-6h-6v-4h6v-6h4v6h6v4z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13 30c-0.26 0-0.516-0.102-0.707-0.293l-7.707-7.707h-3.586c-0.552 0-1-0.448-1-1v-10c0-0.552 0.448-1 1-1h3.586l7.707-7.707c0.286-0.286 0.716-0.372 1.090-0.217s0.617 0.519 0.617 0.924v26c0 0.404-0.244 0.769-0.617 0.924-0.124 0.051-0.254 0.076-0.383 0.076z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-books\",\n    viewBox: \"0 0 36 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7 4h-6c-0.55 0-1 0.45-1 1v22c0 0.55 0.45 1 1 1h6c0.55 0 1-0.45 1-1v-22c0-0.55-0.45-1-1-1zM6 10h-4v-2h4v2z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17 4h-6c-0.55 0-1 0.45-1 1v22c0 0.55 0.45 1 1 1h6c0.55 0 1-0.45 1-1v-22c0-0.55-0.45-1-1-1zM16 10h-4v-2h4v2z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23.909 5.546l-5.358 2.7c-0.491 0.247-0.691 0.852-0.443 1.343l8.999 17.861c0.247 0.491 0.852 0.691 1.343 0.443l5.358-2.7c0.491-0.247 0.691-0.852 0.443-1.343l-8.999-17.861c-0.247-0.491-0.852-0.691-1.343-0.443z\"\n  })))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIcons);\nexport default __webpack_public_path__ + \"static/media/icons.77c8d2ef0bd65aab65a1e4f05688514c.svg\";\nexport { ForwardRef as ReactComponent };","import { ContactForm } from '../ContactForm/ContactForm';\nimport { ContactList } from '../ContactList/ContactList';\nimport { Filter } from '../Filter/Filter';\nimport { useEffect } from 'react';\nimport {\n  fetchContacts,\n  closeModal,\n  updateContactAvatar,\n  updateContactName,\n  updateContactEmail,\n  updateContactPhone,\n} from '../../redux/AppRedux/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clsx from 'clsx';\nimport {\n  selectError,\n  selectIsLoading,\n  selectOpenModal,\n  selectedContact,\n  selectedIsSlideLoading,\n} from '../../redux/AppRedux/selectors';\nimport css from './Contacts.module.css';\nimport svg from './icons.svg';\nimport { ThreeCircles } from 'react-loader-spinner';\nimport { useState } from 'react';\nimport Notiflix from 'notiflix';\n\nexport const Contacts = () => {\n  const [isNameEditing, setNameEdit] = useState(false);\n  const [nameValue, setNameValue] = useState(\"\");\n  const [isEmailEditing, setEmailEdit] = useState(false);\n  const [emailValue, setEmailValue] = useState('');\n   const [isPhoneEditing, setPhoneEdit] = useState(false);\n   const [phoneValue, setPhoneValue] = useState('');\n  //const [idValue, setIdValue] = useState('');\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const isSlideLoading = useSelector(selectedIsSlideLoading);\n  const myContact = useSelector(selectedContact);\n  const error = useSelector(selectError);\n   const isOpenModal = useSelector(selectOpenModal);\n const handleModalClose = () => {\n   dispatch(closeModal());\n   setNameEdit(false);\n   setEmailEdit(false);\n  };\n\n  const handleNameChange = evt => { \n    setNameValue(evt.target.value);\n    /*const id = evt.currentTarget.getAttribute('data-id');\n    setIdValue(id);*/\n  }\n\n  const handleNameEdit = evt => { \n    setNameEdit(true);\n    //const input = document.getElementById('nameInput');\n    evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n    setTimeout(() => {\n      evt.target.style.boxShadow = 'none';\n      const input = document.querySelector('[name=\"username\"]');\n      input.focus();\n    }, 100);\n  }\n\n   const handleNameSave = evt => {\n     if (nameValue.trim() != '') {\n       const idValue = evt.target.name;\n       dispatch(updateContactName({ name: nameValue, myUpdateId: idValue }));\n       setNameEdit(false);\n     } else if (nameValue.trim() === '') {\n       Notiflix.Notify.failure('Input is required');\n     }\n     evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n     setTimeout(() => {\n       evt.target.style.boxShadow = 'none';\n     }, 500);\n  };\n  \n   const handleNameEditClose = () => {\n     setNameEdit(false);\n   };\n\n    const handleEmailChange = evt => {\n      setEmailValue(evt.target.value);\n      /*const id = evt.currentTarget.getAttribute('data-id');\n    setIdValue(id);*/\n    };\n\n    const handleEmailEdit = evt => {\n      setEmailEdit(true);\n      evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n      setTimeout(() => {\n        evt.target.style.boxShadow = 'none';\n        const input = document.querySelector('[name=\"email\"]');\n        input.focus();\n      }, 100);\n  };\n\n   const handleEmailSave = evt => {\n     if (emailValue.trim() != '') {\n       const idValue = evt.target.name;\n       dispatch(updateContactEmail({ email: emailValue, myUpdateId: idValue }));\n       setEmailEdit(false);\n     } else if (emailValue.trim() === '') {\n       Notiflix.Notify.failure('Input is required');\n     }\n     evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n     setTimeout(() => {\n       evt.target.style.boxShadow = 'none';\n     }, 500);\n   };\n\n  const handleEmailEditClose = () => {\n    setEmailEdit(false);\n  }\n\n  const handlePhoneChange = evt => {\n    setPhoneValue(evt.target.value);\n    /*const id = evt.currentTarget.getAttribute('data-id');\n    setIdValue(id);*/\n  };\n \n   const handlePhoneEdit = evt => {\n     setPhoneEdit(true);\n     evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n     setTimeout(() => {\n       evt.target.style.boxShadow = 'none';\n       const input = document.querySelector('[name=\"phone\"]');\n       input.focus();\n     }, 100);\n   };\n  \n  const handlePhoneSave = evt => {\n    if (emailValue.trim() != '') {\n      const idValue = evt.target.name;\n      dispatch(updateContactPhone({ phone: phoneValue, myUpdateId: idValue }));\n      setPhoneEdit(false);\n    } else if (emailValue.trim() === '') {\n      Notiflix.Notify.failure('Input is required');\n    }\n    evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n    setTimeout(() => {\n      evt.target.style.boxShadow = 'none';\n    }, 500);\n  };\n \n  const handlePhoneEditClose = () => {\n    setPhoneEdit(false);\n  };\n  \n   const handleImageChange = e => {\n     const file = e.target.files[0];\n     const id = e.currentTarget.getAttribute('data-id');\n     //dispatch(updateAvatar({ avatar: file }));\n     //console.log({ avatar: file });\n     if (file) {\n       dispatch(updateContactAvatar({ myFile: file, myId: id })); // Store the file under the key \"avatar\"\n     }\n   };\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  //console.log(myVal);\n\n  return (\n    <div\n      className={clsx(css.coverWrapper, {\n        [css.selected]: isOpenModal,\n        'is-elevated': false,\n      })}\n    >\n      <ContactForm>\n        {isLoading && !error && <b>Please wait...</b>}\n        {error && <b>There was an error</b>}\n        <div\n          className={clsx(css.contactsDetailsHide, {\n            [css.contactsDetailsShow]: isOpenModal,\n            'is-elevated': false,\n          })}\n        >\n          {isSlideLoading && (\n            <div className={css.backDrop}>\n              <ThreeCircles\n                visible={true}\n                height=\"80\"\n                width=\"80\"\n                color=\"rgb(235, 144, 25)\"\n                radius=\"9\"\n                ariaLabel=\"three-dots-loading\"\n                wrapperStyle={{}}\n                wrapperClass={css.loader}\n              />\n            </div>\n          )}\n          <button className={css.closeModal} onClick={handleModalClose}>\n            <svg width=\"10px\" height=\"10px\" className={css.modalIcon}>\n              <use href={`${svg}#icon-cross`}></use>\n            </svg>\n          </button>\n          <div className={css.detailsImageWrapper}>\n            <img\n              className={css.detailsImage}\n              src={`http://localhost:8000${myContact.avatarURL}`}\n              alt=\"Contact\"\n            />\n          </div>\n          <input\n            className={css.detailsImageButton}\n            type=\"file\"\n            accept=\"image/*\"\n            name=\"avatar\"\n            onChange={handleImageChange}\n            id=\"2\"\n            data-id={myContact._id}\n          />\n          <label className={css.detailsImageInput} htmlFor=\"2\">\n            Update Picture +\n          </label>\n          <ul className={css.detailsWrapper}>\n            <li className={css.detailsItem}>\n              <span className={css.detailsCover}>\n                <span className={css.detailsInfo}>\n                  <span className={css.details}>Name:-</span>{' '}\n                  {isNameEditing === false ? (\n                    <span className={css.detailsVal}>\n                      <i className={css.detail}>{myContact.name}</i>\n                    </span>\n                  ) : (\n                    <input\n                      type=\"text\"\n                      className={css.detailsValInput}\n                      required\n                      onChange={handleNameChange}\n                      data-id={myContact._id}\n                      name=\"username\"\n                    />\n                  )}\n                </span>\n                <span className={css.buttonWrapper}>\n                  {isNameEditing === true && (\n                    <button\n                      className={css.detailsEditClose}\n                      onClick={handleNameEditClose}\n                    >\n                      <svg width=\"5px\" height=\"5px\" className={css.modalIcon}>\n                        <use href={`${svg}#icon-cross`}></use>\n                      </svg>\n                    </button>\n                  )}\n                  {isNameEditing === false ? (\n                    <button\n                      className={css.detailButton}\n                      onClick={handleNameEdit}\n                    >\n                      Edit\n                    </button>\n                  ) : (\n                    <button\n                      name={myContact._id}\n                      className={css.detailButton}\n                      onClick={handleNameSave}\n                    >\n                      Save\n                    </button>\n                  )}\n                </span>\n              </span>\n            </li>\n            <li className={css.detailsItem}>\n              <span className={css.detailsCover}>\n                <span className={css.detailsInfo}>\n                  <span className={css.details}>Email:-</span>{' '}\n                  {isEmailEditing === false ? (\n                    <span className={css.detailsVal}>\n                      <i className={css.detail}>{myContact.email}</i>\n                    </span>\n                  ) : (\n                    <input\n                      type=\"text\"\n                      className={css.detailsValInput}\n                      required\n                      onChange={handleEmailChange}\n                      data-id={myContact._id}\n                      name=\"email\"\n                    />\n                  )}\n                </span>\n                <span className={css.buttonWrapper}>\n                  {isEmailEditing === true && (\n                    <button\n                      className={css.detailsEditClose}\n                      onClick={handleEmailEditClose}\n                    >\n                      <svg width=\"5px\" height=\"5px\" className={css.modalIcon}>\n                        <use href={`${svg}#icon-cross`}></use>\n                      </svg>\n                    </button>\n                  )}\n                  {isEmailEditing === false ? (\n                    <button\n                      className={css.detailButton}\n                      onClick={handleEmailEdit}\n                    >\n                      Edit\n                    </button>\n                  ) : (\n                    <button\n                      name={myContact._id}\n                      className={css.detailButton}\n                      onClick={handleEmailSave}\n                    >\n                      Save\n                    </button>\n                  )}\n                </span>\n              </span>\n            </li>\n            <li className={css.detailsItem}>\n              <span className={css.detailsCover}>\n                <span className={css.detailsInfo}>\n                  <span className={css.details}>Phone Number:-</span>{' '}\n                  {isPhoneEditing === false ? (\n                    <span className={css.detailsValPhone}>\n                      <i className={css.detail}>{myContact.phone}</i>\n                    </span>\n                  ) : (\n                    <input\n                      type=\"text\"\n                      className={css.detailsValInputPhone}\n                      required\n                      onChange={handlePhoneChange}\n                      data-id={myContact._id}\n                      name=\"phone\"\n                    />\n                  )}\n                </span>\n                <span className={css.buttonWrapper}>\n                  {isPhoneEditing === true && (\n                    <button\n                      className={css.detailsEditClose}\n                      onClick={handlePhoneEditClose}\n                    >\n                      <svg width=\"5px\" height=\"5px\" className={css.modalIcon}>\n                        <use href={`${svg}#icon-cross`}></use>\n                      </svg>\n                    </button>\n                  )}\n                  {isPhoneEditing === false ? (\n                    <button\n                      className={css.detailButton}\n                      onClick={handlePhoneEdit}\n                    >\n                      Edit\n                    </button>\n                  ) : (\n                    <button\n                      name={myContact._id}\n                      className={css.detailButton}\n                      onClick={handlePhoneSave}\n                    >\n                      Save\n                    </button>\n                  )}\n                </span>\n              </span>\n            </li>\n          </ul>\n        </div>\n        <ContactList>\n          <Filter />\n        </ContactList>\n      </ContactForm>\n    </div>\n  );\n};\n\nexport default Contacts;\n","export const selectContacts = state => state.contacts.contacts.items;\n\nexport const selectContactsFilter = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.contacts.isLoading;\n\nexport const selectIsKeyLoading = state => state.contacts.contacts.isKeyLoading;\n\nexport const selectError = state => state.contacts.contacts.error;\n\nexport const selectOpenModal = state => state.contacts.contacts.openMyModal;\n\nexport const selectedContact = state => state.contacts.contacts.selectedContact;\n\nexport const selectedIsSlideLoading = state => state.contacts.contacts.isSlideLoading;\n\nexport const selectedIsSlideError = state => state.contacts.contacts.isSlideError;\n\nexport const selectFilterUp = state => state.contacts.contacts.filterUpLimit;\n\nexport const selectFilterDown = state => state.contacts.contacts.filterDownLimit;\n"],"names":["ContactForm","_ref","children","contactNameId","nanoid","contactNumberId","contacts","useSelector","selectContacts","dispatch","useDispatch","_jsxs","className","css","_jsx","onSubmit","event","preventDefault","currentName","target","value","some","contact","name","trim","toLowerCase","alert","addContact","phone","reset","type","placeholder","pattern","title","required","autoComplete","id","onChange","evt","nameRay","wrd","hasExceeded","length","_toConsumableArray","pop","join","onClick","style","boxShadow","setTimeout","ContactList","filterUp","selectFilterUp","filterDown","selectFilterDown","handleDelete","deleteContact","filterValue","selectContactsFilter","handleModalOpen","getAttribute","currentTarget","fetchContactById","openModal","_useState","useState","_useState2","_slicedToArray","lowerLimit","setLowerLimit","_useState3","_useState4","upperLimit","setUpperLimit","handleForward","console","log","str","sto","handleFilterFowardUp","handleFilterFowardDown","handleBackward","str1","sto1","handleFilterBackwardUp","handleFilterBackwardDown","bestMatches","filter","includes","map","myindex","indexOf","_id","navigator","clipboard","writeText","Notiflix","Filter","searchTermId","filterUpper","filterLower","htmlFor","setFilter","Contacts","_clsx","_clsx2","isNameEditing","setNameEdit","nameValue","setNameValue","_useState5","_useState6","isEmailEditing","setEmailEdit","_useState7","_useState8","emailValue","setEmailValue","_useState9","_useState10","isPhoneEditing","setPhoneEdit","_useState11","_useState12","phoneValue","setPhoneValue","isLoading","selectIsLoading","isSlideLoading","selectedIsSlideLoading","myContact","selectedContact","error","selectError","isOpenModal","selectOpenModal","useEffect","fetchContacts","clsx","_defineProperty","ThreeCircles","visible","height","width","color","radius","ariaLabel","wrapperStyle","wrapperClass","closeModal","href","concat","svg","src","avatarURL","alt","accept","e","file","files","updateContactAvatar","myFile","myId","document","querySelector","focus","idValue","updateContactName","myUpdateId","email","updateContactEmail","updateContactPhone","state","items","openMyModal","filterUpLimit","filterDownLimit"],"sourceRoot":""}